# This is a basic workflow to help you get started with Actions

name: Validate all modules in index can be added and built

# Controls when the workflow will run
on:
  # Triggers the workflow on master every night at 3:15 am
  schedule:
    - cron: "15 3 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Install cfbs
      - name: Install cfbs
        run: pip3 install cfbs

      # Move the index out of the way
      - name: Move the index out of the way
        run: mv cfbs.json index.json

      # Initialize a cfbs project
      - name: Initialize cfbs project
        run: cfbs --index index.json init

      # Add masterfiles
      - name: Add masterfiles
        run: cfbs --index index.json add masterfiles

      # Add all module
      - name: Add all modules
        run: |
          cfbs search --index index.json | \
          awk '{print $1}' | \
          xargs -n1 cfbs --index index.json add

      # Build
      - name: Build
        run: cfbs build --ignore-versions-json

      # Build
      - name: Status
        run: cfbs status
      # Validate built policy
      # Here we use root for everything to avoid permissions problems in policy that accesses files
      - name: Validate built policy
        run: |
          sudo pip3 install cfbs
          wget https://s3.amazonaws.com/cfengine.packages/quick-install-cfengine-enterprise.sh  && sudo bash ./quick-install-cfengine-enterprise.sh agent
          sudo cfbs install
          # fake a bootstrap, lib-fim module expects stdlib to be in inputs with $(sys.libdir)
          sudo cp -r /var/cfengine/masterfiles/lib /var/cfengine/inputs
          sudo cf-promises -f /var/cfengine/masterfiles/promises.cf
          sudo cf-promises -vf /var/cfengine/masterfiles/update.cf
